// <auto-generated />
using System;
using API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20241011061927_fixTreinoChavePrimaria")]
    partial class fixTreinoChavePrimaria
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("API.Models.Aluno", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PlanoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfessorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TreinoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlanoId");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("TreinoId");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("API.Models.Plano", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomePlano")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Planos");
                });

            modelBuilder.Entity("API.Models.Professor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("API.Models.Treino", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DuracaoEmDias")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Treinos");
                });

            modelBuilder.Entity("API.Models.Aluno", b =>
                {
                    b.HasOne("API.Models.Plano", "Plano")
                        .WithMany("Alunos")
                        .HasForeignKey("PlanoId");

                    b.HasOne("API.Models.Professor", "Professor")
                        .WithMany("Alunos")
                        .HasForeignKey("ProfessorId");

                    b.HasOne("API.Models.Treino", "Treino")
                        .WithMany("Alunos")
                        .HasForeignKey("TreinoId");

                    b.Navigation("Plano");

                    b.Navigation("Professor");

                    b.Navigation("Treino");
                });

            modelBuilder.Entity("API.Models.Plano", b =>
                {
                    b.Navigation("Alunos");
                });

            modelBuilder.Entity("API.Models.Professor", b =>
                {
                    b.Navigation("Alunos");
                });

            modelBuilder.Entity("API.Models.Treino", b =>
                {
                    b.Navigation("Alunos");
                });
#pragma warning restore 612, 618
        }
    }
}
