// <auto-generated />
using System;
using API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(AppDataContext))]
    partial class AppDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("API.Models.Aluno", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataDuracao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PlanoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProfessorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TreinoDomingoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TreinoQuartaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TreinoQuintaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TreinoSabadoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TreinoSegundaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TreinoSextaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TreinoTercaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlanoId");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("TreinoDomingoId");

                    b.HasIndex("TreinoQuartaId");

                    b.HasIndex("TreinoQuintaId");

                    b.HasIndex("TreinoSabadoId");

                    b.HasIndex("TreinoSegundaId");

                    b.HasIndex("TreinoSextaId");

                    b.HasIndex("TreinoTercaId");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("API.Models.PlanoDeUso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomePlano")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PlanoDeUso");
                });

            modelBuilder.Entity("API.Models.Professor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("API.Models.Treino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DuracaoEmDias")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Treino");
                });

            modelBuilder.Entity("API.Models.Aluno", b =>
                {
                    b.HasOne("API.Models.PlanoDeUso", "Plano")
                        .WithMany()
                        .HasForeignKey("PlanoId");

                    b.HasOne("API.Models.Professor", "Professor")
                        .WithMany("Alunos")
                        .HasForeignKey("ProfessorId");

                    b.HasOne("API.Models.Treino", "TreinoDomingo")
                        .WithMany()
                        .HasForeignKey("TreinoDomingoId");

                    b.HasOne("API.Models.Treino", "TreinoQuarta")
                        .WithMany()
                        .HasForeignKey("TreinoQuartaId");

                    b.HasOne("API.Models.Treino", "TreinoQuinta")
                        .WithMany()
                        .HasForeignKey("TreinoQuintaId");

                    b.HasOne("API.Models.Treino", "TreinoSabado")
                        .WithMany()
                        .HasForeignKey("TreinoSabadoId");

                    b.HasOne("API.Models.Treino", "TreinoSegunda")
                        .WithMany()
                        .HasForeignKey("TreinoSegundaId");

                    b.HasOne("API.Models.Treino", "TreinoSexta")
                        .WithMany()
                        .HasForeignKey("TreinoSextaId");

                    b.HasOne("API.Models.Treino", "TreinoTerca")
                        .WithMany()
                        .HasForeignKey("TreinoTercaId");

                    b.Navigation("Plano");

                    b.Navigation("Professor");

                    b.Navigation("TreinoDomingo");

                    b.Navigation("TreinoQuarta");

                    b.Navigation("TreinoQuinta");

                    b.Navigation("TreinoSabado");

                    b.Navigation("TreinoSegunda");

                    b.Navigation("TreinoSexta");

                    b.Navigation("TreinoTerca");
                });

            modelBuilder.Entity("API.Models.Professor", b =>
                {
                    b.Navigation("Alunos");
                });
#pragma warning restore 612, 618
        }
    }
}
